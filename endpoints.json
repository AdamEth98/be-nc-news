{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api",
    "statusCodes": {
      "200": "ok"
    }
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    },
    "statusCodes": {
      "200": "ok"
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles - can utilize optional queries to filter topics or change the way the response is ordered. ",
    "queries": ["topic", "sort_by", "order"],
    "exampleResponse": {
      "articles": [
        {
          "article_id": 2,
          "title": "Sony Vaio; or, The Laptop",
          "topic": "mitch",
          "author": "sam",
          "body": "Call me Mitchell. Some years agoâ€”never...",
          "created_at": 1602828180000,
          "votes": 0
        }
      ]
    },
    "statusCodes": {
      "200": "ok"
    }
  },
  "GET /api/articles/:article_id": {
    "description": "serves a single article object based on a given article id",
    "queries": [],
    "exampleResponse": {
      "article": {
        "article_id": 1,
        "title": "Living in the shadow of a great man",
        "topic": "mitch",
        "author": "jonny",
        "body": "I find this existence challenging",
        "created_at": 1594329060000,
        "votes": 100,
        "comment_count": 5
      }
    },
    "statusCodes": {
      "200": "ok",
      "400": "article_id must be a number",
      "404": "article not found"
    }
  },
  "GET /api/users": {
    "description": "serves an array of all users",
    "queries": [],
    "exampleResponse": [
      {
        "user_id": 1,
        "username": "coolusername",
        "name": "coolname",
        "avatar_url": "http://coolavatarurl.com"
      }
    ]
  },
  "GET /api/articles/:article_id/comments": {
    "description": "serves an array of all comments for specific article based on a given article_id",
    "queries": [],
    "exampleResponse": [
      {
        "comment_id": 1,
        "votes": 10,
        "created_at": 1594329060000,
        "author": "jonny",
        "body": "nice article!"
      }
    ],
    "statusCodes": {
      "200": "ok",
      "400": "article_id must be a number",
      "404": "article not found"
    }
  },
  "POST /api/articles/:article_id/comments": {
    "description": "uses the request body to add a new comment to an existing article",
    "queries": [],
    "exampleBody": {
      "username": "jonny",
      "body": "interesting read!"
    },
    "exampleResponse": {
      "comment": {
        "comment_id": 20,
        "votes": 0,
        "created_at": 1594329060000,
        "author": "jonny",
        "body": "interesting read!"
      }
    },
    "statusCodes": {
      "204": "created",
      "400": "article_id must be a number || incorrect body formatting",
      "404": "article not found"
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "uses the request body to increment the number of votes an article has - uses the value of inc_votes",
    "queries": [],
    "exampleBody": {
      "inc_votes": 10
    },
    "exampleResponse": {
      "article": {
        "article_id": 1,
        "title": "Living in the shadow of a great man",
        "topic": "mitch",
        "author": "jonny",
        "body": "I find this existence challenging",
        "created_at": 1594329060000,
        "votes": 110,
        "comment_count": 5
      }
    },
    "statusCodes": {
      "200": "ok",
      "400": "article_id must be a number || incorrect body formatting",
      "404": "article not found"
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "deletes a comment based on the comment_id",
    "queries": [],
    "exampleResponse": {},
    "statusCodes": {
      "204": "deleted",
      "400": "comment_id must be a number",
      "404": "comment not found or has already been deleted"
    }
  }
}
